{
  "omp_lib": {
    "type": 0,
    "name": "omp_lib",
    "children": [
      {
        "name": "openmp_version",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "omp_alloctrait",
        "type": 4
      },
      {
        "name": "omp_sched_static",
        "type": 3,
        "desc": "INTEGER(KIND=omp_sched_kind)"
      },
      {
        "name": "omp_sched_dynamic",
        "type": 3,
        "desc": "INTEGER(KIND=omp_sched_kind)"
      },
      {
        "name": "omp_sched_guided",
        "type": 3,
        "desc": "INTEGER(KIND=omp_sched_kind)"
      },
      {
        "name": "omp_sched_auto",
        "type": 3,
        "desc": "INTEGER(KIND=omp_sched_kind)"
      },
      {
        "name": "omp_proc_bind_false",
        "type": 3,
        "desc": "INTEGER(KIND=omp_proc_bind_kind)"
      },
      {
        "name": "omp_proc_bind_true",
        "type": 3,
        "desc": "INTEGER(KIND=omp_proc_bind_kind)"
      },
      {
        "name": "omp_proc_bind_master",
        "type": 3,
        "desc": "INTEGER(KIND=omp_proc_bind_kind)"
      },
      {
        "name": "omp_proc_bind_close",
        "type": 3,
        "desc": "INTEGER(KIND=omp_proc_bind_kind)"
      },
      {
        "name": "omp_proc_bind_spread",
        "type": 3,
        "desc": "INTEGER(KIND=omp_proc_bind_kind)"
      },
      {
        "name": "omp_lock_hint_none",
        "type": 3,
        "desc": "INTEGER(KIND=omp_lock_hint_kind)"
      },
      {
        "name": "omp_lock_hint_uncontended",
        "type": 3,
        "desc": "INTEGER(KIND=omp_lock_hint_kind)"
      },
      {
        "name": "omp_lock_hint_contended",
        "type": 3,
        "desc": "INTEGER(KIND=omp_lock_hint_kind)"
      },
      {
        "name": "omp_lock_hint_nonspeculative",
        "type": 3,
        "desc": "INTEGER(KIND=omp_lock_hint_kind)"
      },
      {
        "name": "omp_lock_hint_speculative",
        "type": 3,
        "desc": "INTEGER(KIND=omp_lock_hint_kind)"
      },
      {
        "name": "omp_sync_hint_none",
        "type": 3,
        "desc": "INTEGER(KIND=omp_lock_hint_kind)"
      },
      {
        "name": "omp_sync_hint_uncontended",
        "type": 3,
        "desc": "INTEGER(KIND=omp_lock_hint_kind)"
      },
      {
        "name": "omp_sync_hint_contended",
        "type": 3,
        "desc": "INTEGER(KIND=omp_lock_hint_kind)"
      },
      {
        "name": "omp_sync_hint_nonspeculative",
        "type": 3,
        "desc": "INTEGER(KIND=omp_lock_hint_kind)"
      },
      {
        "name": "omp_sync_hint_speculative",
        "type": 3,
        "desc": "INTEGER(KIND=omp_lock_hint_kind)"
      },
      {
        "name": "omp_pause_soft",
        "type": 3,
        "desc": "INTEGER(KIND=omp_pause_resource_kind)"
      },
      {
        "name": "omp_pause_hard",
        "type": 3,
        "desc": "INTEGER(KIND=omp_pause_resource_kind)"
      },
      {
        "name": "omp_atk_sync_hint",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_key_kind)"
      },
      {
        "name": "omp_atk_alignment",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_key_kind)"
      },
      {
        "name": "omp_atk_access",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_key_kind)"
      },
      {
        "name": "omp_atk_pool_size",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_key_kind)"
      },
      {
        "name": "omp_atk_fallback",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_key_kind)"
      },
      {
        "name": "omp_atk_fb_data",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_key_kind)"
      },
      {
        "name": "omp_atk_pinned",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_key_kind)"
      },
      {
        "name": "omp_atk_partition",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_key_kind)"
      },
      {
        "name": "omp_atv_default",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_val_kind)"
      },
      {
        "name": "omp_atv_false",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_val_kind)"
      },
      {
        "name": "omp_atv_true",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_val_kind)"
      },
      {
        "name": "omp_atv_contended",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_val_kind)"
      },
      {
        "name": "omp_atv_uncontended",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_val_kind)"
      },
      {
        "name": "omp_atv_serialized",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_val_kind)"
      },
      {
        "name": "omp_atv_sequential",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_val_kind)"
      },
      {
        "name": "omp_atv_private",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_val_kind)"
      },
      {
        "name": "omp_atv_all",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_val_kind)"
      },
      {
        "name": "omp_atv_thread",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_val_kind)"
      },
      {
        "name": "omp_atv_pteam",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_val_kind)"
      },
      {
        "name": "omp_atv_cgroup",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_val_kind)"
      },
      {
        "name": "omp_atv_default_mem_fb",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_val_kind)"
      },
      {
        "name": "omp_atv_null_fb",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_val_kind)"
      },
      {
        "name": "omp_atv_abort_fb",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_val_kind)"
      },
      {
        "name": "omp_atv_allocator_fb",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_val_kind)"
      },
      {
        "name": "omp_atv_environment",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_val_kind)"
      },
      {
        "name": "omp_atv_nearest",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_val_kind)"
      },
      {
        "name": "omp_atv_blocked",
        "type": 3,
        "desc": "INTEGER(KIND=omp_alloctrait_val_kind)"
      },
      {
        "name": "omp_null_allocator",
        "type": 3,
        "desc": "INTEGER(KIND=omp_allocator_handle_kind)"
      },
      {
        "name": "omp_default_mem_alloc",
        "type": 3,
        "desc": "INTEGER(KIND=omp_allocator_handle_kind)"
      },
      {
        "name": "omp_large_cap_mem_alloc",
        "type": 3,
        "desc": "INTEGER(KIND=omp_allocator_handle_kind)"
      },
      {
        "name": "omp_const_mem_alloc",
        "type": 3,
        "desc": "INTEGER(KIND=omp_allocator_handle_kind)"
      },
      {
        "name": "omp_high_bw_mem_alloc",
        "type": 3,
        "desc": "INTEGER(KIND=omp_allocator_handle_kind)"
      },
      {
        "name": "omp_low_lat_mem_alloc",
        "type": 3,
        "desc": "INTEGER(KIND=omp_allocator_handle_kind)"
      },
      {
        "name": "omp_cgroup_mem_alloc",
        "type": 3,
        "desc": "INTEGER(KIND=omp_allocator_handle_kind)"
      },
      {
        "name": "omp_pteam_mem_alloc",
        "type": 3,
        "desc": "INTEGER(KIND=omp_allocator_handle_kind)"
      },
      {
        "name": "omp_thread_mem_alloc",
        "type": 3,
        "desc": "INTEGER(KIND=omp_allocator_handle_kind)"
      },
      {
        "name": "omp_default_mem_space",
        "type": 3,
        "desc": "INTEGER(KIND=omp_memspace_handle_kind)"
      },
      {
        "name": "omp_large_cap_mem_space",
        "type": 3,
        "desc": "INTEGER(KIND=omp_memspace_handle_kind)"
      },
      {
        "name": "omp_const_mem_space",
        "type": 3,
        "desc": "INTEGER(KIND=omp_memspace_handle_kind)"
      },
      {
        "name": "omp_high_bw_mem_space",
        "type": 3,
        "desc": "INTEGER(KIND=omp_memspace_handle_kind)"
      },
      {
        "name": "omp_low_lat_mem_space",
        "type": 3,
        "desc": "INTEGER(KIND=omp_memspace_handle_kind)"
      },
      {
        "name": "omp_get_supported_active_levels",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_num_threads",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_max_threads",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_thread_num",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_num_procs",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_thread_limit",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_max_active_levels",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_level",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_ancestor_thread_num",
        "type": 2,
        "return": "INTEGER",
        "args": "level",
        "children": [
          {
            "name": "level",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "omp_get_team_size",
        "type": 2,
        "return": "INTEGER",
        "args": "level",
        "children": [
          {
            "name": "level",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "omp_get_active_level",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_proc_bind",
        "type": 2,
        "return": "INTEGER(KIND=omp_proc_bind_kind)"
      },
      {
        "name": "omp_get_num_places",
        "type": 2,
        "return": "INTEGER(KIND=omp_proc_bind_kind)"
      },
      {
        "name": "omp_get_place_num_procs",
        "type": 2,
        "return": "INTEGER",
        "args": "place_num",
        "children": [
          {
            "name": "place_num",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "omp_get_place_proc_ids",
        "type": 1,
        "args": "place_num,ids",
        "children": [
          {
            "name": "place_num",
            "type": 3,
            "desc": "INTEGER"
          },
          {
            "name": "ids",
            "type": 3,
            "desc": "INTEGER",
            "mods": ["DIMENSION(*)"]
          }
        ]
      },
      {
        "name": "omp_get_partition_place_nums",
        "type": 1,
        "args": "place_nums",
        "children": [
          {
            "name": "place_nums",
            "type": 3,
            "desc": "INTEGER",
            "mods": ["DIMENSION(*)"]
          }
        ]
      },
      {
        "name": "omp_set_affinity_format",
        "type": 1,
        "args": "format",
        "children": [
          {
            "name": "format",
            "type": 3,
            "desc": "CHARACTER(LEN=*)",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "omp_get_affinity_format",
        "type": 2,
        "return": "INTEGER",
        "args": "buffer",
        "children": [
          {
            "name": "buffer",
            "type": 3,
            "desc": "CHARACTER(LEN=*)",
            "mods": ["INTENT(out)"]
          }
        ]
      },
      {
        "name": "omp_display_affinity",
        "type": 1,
        "args": "format",
        "children": [
          {
            "name": "format",
            "type": 3,
            "desc": "CHARACTER(LEN=*)",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "omp_capture_affinity",
        "type": 1,
        "args": "buffer,format",
        "children": [
          {
            "name": "buffer",
            "type": 3,
            "desc": "CHARACTER(LEN=*)",
            "mods": ["INTENT(out)"]
          },
          {
            "name": "format",
            "type": 3,
            "desc": "CHARACTER(LEN=*)",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "omp_get_default_device",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_num_devices",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_device_num",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_num_teams",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_team_num",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_in_parallel",
        "type": 2,
        "return": "LOGICAL"
      },
      {
        "name": "omp_get_dynamic",
        "type": 2,
        "return": "LOGICAL"
      },
      {
        "name": "omp_get_cancellation",
        "type": 2,
        "return": "LOGICAL"
      },
      {
        "name": "omp_get_nested",
        "type": 2,
        "return": "LOGICAL"
      },
      {
        "name": "omp_in_final",
        "type": 2,
        "return": "LOGICAL"
      },
      {
        "name": "omp_is_initial_device",
        "type": 2,
        "return": "LOGICAL"
      },
      {
        "name": "omp_get_initial_device",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_get_max_task_priority",
        "type": 2,
        "return": "INTEGER"
      },
      {
        "name": "omp_pause_resource",
        "type": 2,
        "return": "INTEGER",
        "args": "kind,device_num",
        "children": [
          {
            "name": "kind",
            "type": 3,
            "desc": "INTEGER(KIND=omp_pause_resource_kind)"
          },
          {
            "name": "device_num",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "omp_pause_resource_all",
        "type": 2,
        "return": "INTEGER",
        "args": "kind",
        "children": [
          {
            "name": "kind",
            "type": 3,
            "desc": "INTEGER(KIND=omp_pause_resource_kind)"
          }
        ]
      },
      {
        "name": "omp_get_wtime",
        "type": 2,
        "return": "DOUBLE PRECISION"
      },
      {
        "name": "omp_get_wtick",
        "type": 2,
        "return": "DOUBLE PRECISION"
      },
      {
        "name": "omp_fulfill_event",
        "type": 1,
        "args": "event",
        "children": [
          {
            "name": "event",
            "type": 3,
            "desc": "INTEGER(KIND=omp_event_handle_kind)"
          }
        ]
      },
      {
        "name": "omp_init_allocator",
        "type": 2,
        "return": "INTEGER(KIND=omp_allocator_handle_kind)",
        "args": "memspace,ntraits,traits",
        "children": [
          {
            "name": "memspace",
            "type": 3,
            "desc": "INTEGER(KIND=omp_memspace_handle_kind)",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "ntraits",
            "type": 3,
            "desc": "INTEGER",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "traits",
            "type": 3,
            "desc": "TYPE(omp_alloctrait)",
            "mods": ["DIMENSION(*)", "INTENT(in)"]
          }
        ]
      },
      {
        "name": "omp_destroy_allocator",
        "type": 1,
        "args": "allocator",
        "children": [
          {
            "name": "allocator",
            "type": 3,
            "desc": "INTEGER(KIND=omp_allocator_handle_kind)",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "omp_set_default_allocator",
        "type": 1,
        "args": "allocator",
        "children": [
          {
            "name": "allocator",
            "type": 3,
            "desc": "INTEGER(KIND=omp_allocator_handle_kind)",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "omp_get_default_allocator",
        "type": 2,
        "return": "INTEGER(KIND=omp_allocator_handle_kind)"
      },
      {
        "name": "omp_control_tool",
        "type": 2,
        "return": "INTEGER",
        "args": "command,modifier",
        "children": [
          {
            "name": "command",
            "type": 3,
            "desc": "INTEGER(KIND=omp_control_tool_kind)"
          },
          {
            "name": "modifier",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "omp_test_lock",
        "type": 2,
        "return": "LOGICAL",
        "args": "svar",
        "children": [
          {
            "name": "svar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_lock_kind)"
          }
        ]
      },
      {
        "name": "omp_test_nest_lock",
        "type": 2,
        "return": "LOGICAL",
        "args": "nvar",
        "children": [
          {
            "name": "nvar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_nest_lock_kind)"
          }
        ]
      },
      {
        "name": "omp_set_num_threads",
        "type": 1,
        "args": "num_threads",
        "children": [
          {
            "name": "num_threads",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "omp_set_dynamic",
        "type": 1,
        "args": "dynamic_threads",
        "children": [
          {
            "name": "dynamic_threads",
            "type": 3,
            "desc": "LOGICAL"
          }
        ]
      },
      {
        "name": "omp_set_nested",
        "type": 1,
        "args": "nested",
        "children": [
          {
            "name": "nested",
            "type": 3,
            "desc": "LOGICAL"
          }
        ]
      },
      {
        "name": "omp_set_schedule",
        "type": 1,
        "args": "kind,chunk_size",
        "children": [
          {
            "name": "kind",
            "type": 3,
            "desc": "INTEGER(KIND=omp_sched_kind)"
          },
          {
            "name": "chunk_size",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "omp_get_schedule",
        "type": 1,
        "args": "kind,chunk_size",
        "children": [
          {
            "name": "kind",
            "type": 3,
            "desc": "INTEGER(KIND=omp_sched_kind)"
          },
          {
            "name": "chunk_size",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "omp_set_max_active_levels",
        "type": 1,
        "args": "max_levels",
        "children": [
          {
            "name": "max_levels",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "omp_set_default_device",
        "type": 1,
        "args": "device_num",
        "children": [
          {
            "name": "device_num",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "omp_init_lock",
        "type": 1,
        "args": "svar",
        "children": [
          {
            "name": "svar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_lock_kind)"
          }
        ]
      },
      {
        "name": "omp_init_nest_lock",
        "type": 1,
        "args": "nvar",
        "children": [
          {
            "name": "nvar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_nest_lock_kind)"
          }
        ]
      },
      {
        "name": "omp_init_lock_with_hint",
        "type": 1,
        "args": "svar,hint",
        "children": [
          {
            "name": "svar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_lock_kind)"
          },
          {
            "name": "hint",
            "type": 3,
            "desc": "INTEGER(KIND=omp_sync_hint_kind)"
          }
        ]
      },
      {
        "name": "omp_init_nest_lock_with_hint",
        "type": 1,
        "args": "nvar,hint",
        "children": [
          {
            "name": "nvar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_nest_lock_kind)"
          },
          {
            "name": "hint",
            "type": 3,
            "desc": "INTEGER(KIND=omp_sync_hint_kind)"
          }
        ]
      },
      {
        "name": "omp_destroy_lock",
        "type": 1,
        "args": "svar",
        "children": [
          {
            "name": "svar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_lock_kind)"
          }
        ]
      },
      {
        "name": "omp_destroy_nest_lock",
        "type": 1,
        "args": "nvar",
        "children": [
          {
            "name": "nvar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_nest_lock_kind)"
          }
        ]
      },
      {
        "name": "omp_set_lock",
        "type": 1,
        "args": "svar",
        "children": [
          {
            "name": "svar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_lock_kind)"
          }
        ]
      },
      {
        "name": "omp_set_nest_lock",
        "type": 1,
        "args": "nvar",
        "children": [
          {
            "name": "nvar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_nest_lock_kind)"
          }
        ]
      },
      {
        "name": "omp_unset_lock",
        "type": 1,
        "args": "svar",
        "children": [
          {
            "name": "svar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_lock_kind)"
          }
        ]
      },
      {
        "name": "omp_unset_nest_lock",
        "type": 1,
        "args": "nvar",
        "children": [
          {
            "name": "nvar",
            "type": 3,
            "desc": "INTEGER(KIND=omp_nest_lock_kind)"
          }
        ]
      }
    ]
  },
  "omp_lib_kinds": {
    "type": 0,
    "name": "omp_lib_kinds",
    "children": [
      {
        "name": "omp_allocator_handle_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "omp_alloctrait_key_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "omp_alloctrait_val_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "omp_depend_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "omp_lock_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "omp_lock_hint_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "omp_nest_lock_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "omp_pause_resource_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "omp_memspace_handle_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "omp_proc_bind_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "omp_sched_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "omp_sync_hint_kind",
        "type": 3,
        "desc": "INTEGER"
      }
    ]
  },
  "openacc": {
    "type": 0,
    "name": "openacc",
    "children": [
      {
        "name": "openacc_version",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "acc_device_property_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "acc_get_num_devices",
        "type": 2,
        "return": "INTEGER",
        "args": "dev_type",
        "children": [
          {
            "name": "dev_type",
            "type": 3,
            "desc": "INTEGER(KIND=acc_device_kind)"
          }
        ]
      },
      {
        "name": "acc_set_device_type",
        "type": 1,
        "args": "dev_type",
        "children": [
          {
            "name": "dev_type",
            "type": 3,
            "desc": "INTEGER(KIND=acc_device_kind)"
          }
        ]
      },
      {
        "name": "acc_get_device_type",
        "type": 2,
        "return": "INTEGER(KIND=acc_device_kind)"
      },
      {
        "name": "acc_set_device_num",
        "type": 1,
        "args": "dev_num,dev_type",
        "children": [
          {
            "name": "dev_num",
            "type": 3,
            "desc": "INTEGER"
          },
          {
            "name": "dev_type",
            "type": 3,
            "desc": "INTEGER(KIND=acc_device_kind)"
          }
        ]
      },
      {
        "name": "acc_get_device_num",
        "type": 2,
        "return": "INTEGER",
        "args": "dev_type",
        "children": [
          {
            "name": "dev_type",
            "type": 3,
            "desc": "INTEGER(KIND=acc_device_kind)"
          }
        ]
      },
      {
        "name": "acc_get_property",
        "type": 2,
        "return": "INTEGER(KIND=c_size_t)",
        "args": "dev_num,dev_type,property",
        "children": [
          {
            "name": "dev_num",
            "type": 3,
            "desc": "INTEGER",
            "mods": ["VALUE"]
          },
          {
            "name": "dev_type",
            "type": 3,
            "desc": "INTEGER(KIND=acc_device_kind)",
            "mods": ["VALUE"]
          },
          {
            "name": "property",
            "type": 3,
            "desc": "INTEGER(KIND=acc_device_property_kind)",
            "mods": ["VALUE"]
          }
        ]
      },
      {
        "name": "acc_get_property_string",
        "type": 1,
        "args": "dev_num,dev_type,property,string",
        "children": [
          {
            "name": "dev_num",
            "type": 3,
            "desc": "INTEGER",
            "mods": ["VALUE"]
          },
          {
            "name": "dev_type",
            "type": 3,
            "desc": "INTEGER(KIND=acc_device_kind)",
            "mods": ["VALUE"]
          },
          {
            "name": "property",
            "type": 3,
            "desc": "INTEGER(KIND=acc_device_property_kind)",
            "mods": ["VALUE"]
          },
          {
            "name": "string",
            "type": 3,
            "desc": "CHARACTER(LEN=*)"
          }
        ]
      },
      {
        "name": "acc_init",
        "type": 1,
        "args": "dev_type",
        "children": [
          {
            "name": "dev_type",
            "type": 3,
            "desc": "INTEGER(KIND=acc_device_kind)",
            "mods": ["VALUE"]
          }
        ]
      },
      {
        "name": "acc_shutdown",
        "type": 1,
        "args": "dev_type",
        "children": [
          {
            "name": "dev_type",
            "type": 3,
            "desc": "INTEGER(KIND=acc_device_kind)"
          }
        ]
      },
      {
        "name": "acc_async_test",
        "type": 2,
        "return": "LOGICAL",
        "args": "wait_arg",
        "children": [
          {
            "name": "wait_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          }
        ]
      },
      {
        "name": "acc_async_test_device",
        "type": 2,
        "return": "LOGICAL",
        "args": "wait_arg,dev_num",
        "children": [
          {
            "name": "wait_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          },
          {
            "name": "dev_num",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "acc_async_test_all",
        "type": 2,
        "return": "LOGICAL"
      },
      {
        "name": "acc_async_test_all_device",
        "type": 2,
        "return": "LOGICAL",
        "args": "dev_num",
        "children": [
          {
            "name": "dev_num",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "acc_wait",
        "type": 1,
        "args": "wait_arg",
        "children": [
          {
            "name": "wait_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          }
        ]
      },
      {
        "name": "acc_wait",
        "type": 1,
        "args": "wait_arg,dev_num",
        "children": [
          {
            "name": "wait_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          },
          {
            "name": "dev_num",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "acc_wait_async",
        "type": 1,
        "args": "wait_arg,async_arg",
        "children": [
          {
            "name": "wait_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          },
          {
            "name": "async_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          }
        ]
      },
      {
        "name": "acc_wait_device_async",
        "type": 1,
        "args": "wait_arg,async_arg,dev_num",
        "children": [
          {
            "name": "wait_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          },
          {
            "name": "async_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          },
          {
            "name": "dev_num",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "acc_wait_all",
        "type": 1
      },
      {
        "name": "acc_wait_all_device",
        "type": 1,
        "args": "dev_num",
        "children": [
          {
            "name": "dev_num",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "acc_wait_all_async",
        "type": 1,
        "args": "async_arg",
        "children": [
          {
            "name": "async_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          }
        ]
      },
      {
        "name": "acc_wait_all_device_async",
        "type": 1,
        "args": "async_arg,dev_num",
        "children": [
          {
            "name": "async_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          },
          {
            "name": "dev_num",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "acc_get_default_async",
        "type": 2,
        "return": "INTEGER(KIND=acc_device_kind)"
      },
      {
        "name": "acc_set_default_async",
        "type": 1,
        "args": "async_arg",
        "children": [
          {
            "name": "async_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_device_kind)"
          }
        ]
      },
      {
        "name": "acc_on_device",
        "type": 2,
        "return": "LOGICAL",
        "args": "dev_type",
        "children": [
          {
            "name": "dev_type",
            "type": 3,
            "desc": "INTEGER(KIND=acc_device_kind)"
          }
        ]
      },
      {
        "name": "acc_copyin",
        "type": 1,
        "args": "data_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          }
        ]
      },
      {
        "name": "acc_copyin",
        "type": 1,
        "args": "data_arg,bytes",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "bytes",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "acc_copyin_async",
        "type": 1,
        "args": "data_arg,async_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "async_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          }
        ]
      },
      {
        "name": "acc_copyin_async",
        "type": 1,
        "args": "data_arg,bytes,async_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "bytes",
            "type": 3,
            "desc": "INTEGER"
          },
          {
            "name": "async_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          }
        ]
      },
      {
        "name": "acc_create",
        "type": 1,
        "args": "data_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          }
        ]
      },
      {
        "name": "acc_create",
        "type": 1,
        "args": "data_arg,bytes",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "bytes",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "acc_create_async",
        "type": 1,
        "args": "data_arg,async_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "async_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          }
        ]
      },
      {
        "name": "acc_create_async",
        "type": 1,
        "args": "data_arg,bytes,async_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "bytes",
            "type": 3,
            "desc": "INTEGER"
          },
          {
            "name": "async_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          }
        ]
      },
      {
        "name": "acc_copyout",
        "type": 1,
        "args": "data_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          }
        ]
      },
      {
        "name": "acc_copyout",
        "type": 1,
        "args": "data_arg,bytes",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "bytes",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "acc_copyout_async",
        "type": 1,
        "args": "data_arg,async_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "async_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          }
        ]
      },
      {
        "name": "acc_copyout_async",
        "type": 1,
        "args": "data_arg,bytes,async_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "bytes",
            "type": 3,
            "desc": "INTEGER"
          },
          {
            "name": "async_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          }
        ]
      },
      {
        "name": "acc_copyout_finalize",
        "type": 1,
        "args": "data_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          }
        ]
      },
      {
        "name": "acc_copyout_finalize",
        "type": 1,
        "args": "data_arg,bytes",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "bytes",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "acc_copyout_finalize_async",
        "type": 1,
        "args": "data_arg,async_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "async_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          }
        ]
      },
      {
        "name": "acc_copyout_finalize_async",
        "type": 1,
        "args": "data_arg,bytes,async_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "bytes",
            "type": 3,
            "desc": "INTEGER"
          },
          {
            "name": "async_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          }
        ]
      },
      {
        "name": "acc_delete",
        "type": 1,
        "args": "data_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          }
        ]
      },
      {
        "name": "acc_delete",
        "type": 1,
        "args": "data_arg,bytes",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "bytes",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "acc_delete_async",
        "type": 1,
        "args": "data_arg,async_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "async_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          }
        ]
      },
      {
        "name": "acc_delete_async",
        "type": 1,
        "args": "data_arg,bytes,async_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "bytes",
            "type": 3,
            "desc": "INTEGER"
          },
          {
            "name": "async_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          }
        ]
      },
      {
        "name": "acc_delete_finalize",
        "type": 1,
        "args": "data_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          }
        ]
      },
      {
        "name": "acc_delete_finalize",
        "type": 1,
        "args": "data_arg,bytes",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "bytes",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "acc_delete_finalize_async",
        "type": 1,
        "args": "data_arg,async_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "async_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          }
        ]
      },
      {
        "name": "acc_delete_finalize_async",
        "type": 1,
        "args": "data_arg,bytes,async_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "bytes",
            "type": 3,
            "desc": "INTEGER"
          },
          {
            "name": "async_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          }
        ]
      },
      {
        "name": "acc_update_device",
        "type": 1,
        "args": "data_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          }
        ]
      },
      {
        "name": "acc_update_device",
        "type": 1,
        "args": "data_arg,bytes",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "bytes",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "acc_update_device_async",
        "type": 1,
        "args": "data_arg,async_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "async_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          }
        ]
      },
      {
        "name": "acc_update_device_async",
        "type": 1,
        "args": "data_arg,bytes,async_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "bytes",
            "type": 3,
            "desc": "INTEGER"
          },
          {
            "name": "async_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          }
        ]
      },
      {
        "name": "acc_update_self",
        "type": 1,
        "args": "data_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          }
        ]
      },
      {
        "name": "acc_update_self",
        "type": 1,
        "args": "data_arg,bytes",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "bytes",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "acc_update_self_async",
        "type": 1,
        "args": "data_arg,async_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "async_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          }
        ]
      },
      {
        "name": "acc_update_self_async",
        "type": 1,
        "args": "data_arg,bytes,async_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "bytes",
            "type": 3,
            "desc": "INTEGER"
          },
          {
            "name": "async_arg",
            "type": 3,
            "desc": "INTEGER(KIND=acc_handle_kind)"
          }
        ]
      },
      {
        "name": "acc_is_present",
        "type": 2,
        "return": "LOGICAL",
        "args": "data_arg",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          }
        ]
      },
      {
        "name": "acc_is_present",
        "type": 2,
        "return": "LOGICAL",
        "args": "data_arg,bytes",
        "children": [
          {
            "name": "data_arg",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "bytes",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      },
      {
        "name": "acc_memcpy_d2d",
        "type": 1,
        "args": "data_arg_dest,data_arg_src,bytes,dev_num_dest,dev_num_src",
        "children": [
          {
            "name": "data_arg_dest",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "data_arg_src",
            "type": 3,
            "desc": "TYPE(*)",
            "mods": ["DIMENSION(*)"]
          },
          {
            "name": "bytes",
            "type": 3,
            "desc": "INTEGER"
          },
          {
            "name": "dev_num_dest",
            "type": 3,
            "desc": "INTEGER"
          },
          {
            "name": "dev_num_src",
            "type": 3,
            "desc": "INTEGER"
          }
        ]
      }
    ]
  },
  "openacc_kinds": {
    "type": 0,
    "name": "openacc_kinds",
    "children": [
      {
        "name": "acc_device_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "acc_device_none",
        "type": 3,
        "desc": "INTEGER(KIND=acc_device_kind)"
      },
      {
        "name": "acc_device_default",
        "type": 3,
        "desc": "INTEGER(KIND=acc_device_kind)"
      },
      {
        "name": "acc_device_host",
        "type": 3,
        "desc": "INTEGER(KIND=acc_device_kind)"
      },
      {
        "name": "acc_device_not_host",
        "type": 3,
        "desc": "INTEGER(KIND=acc_device_kind)"
      },
      {
        "name": "acc_device_nvidia",
        "type": 3,
        "desc": "INTEGER(KIND=acc_device_kind)"
      },
      {
        "name": "acc_handle_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "acc_async_noval",
        "type": 3,
        "desc": "INTEGER(KIND=acc_handle_kind)"
      },
      {
        "name": "acc_async_sync",
        "type": 3,
        "desc": "INTEGER(KIND=acc_handle_kind)"
      }
    ]
  },
  "iso_fortran_env": {
    "type": 0,
    "name": "iso_fortran_env",
    "children": [
      {
        "name": "atomic_int_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "atomic_logical_kind",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "character_kinds",
        "type": 3,
        "desc": "INTEGER",
        "mods": ["DIMENSION(:)"]
      },
      {
        "name": "character_storage_size",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "error_unit",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "file_storage_size",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "input_unit",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "int8",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "int16",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "int32",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "int64",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "integer_kinds",
        "type": 3,
        "desc": "INTEGER",
        "mods": ["DIMENSION(:)"]
      },
      {
        "name": "iostat_end",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "iostat_eor",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "iostat_inquire_internal_unit",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "numeric_storage_size",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "logical_kinds",
        "type": 3,
        "desc": "INTEGER",
        "mods": ["DIMENSION(:)"]
      },
      {
        "name": "output_unit",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "real32",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "real64",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "real128",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "real_kinds",
        "type": 3,
        "desc": "INTEGER",
        "mods": ["DIMENSION(:)"]
      },
      {
        "name": "stat_locked",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "stat_locked_other_image",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "stat_stopped_image",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "stat_failed_image",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "stat_unlocked",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "lock_type",
        "type": 4
      },
      {
        "name": "compiler_options",
        "type": 2,
        "return": "CHARACTER(LEN=*)"
      },
      {
        "name": "compiler_version",
        "type": 2,
        "return": "CHARACTER(LEN=*)"
      }
    ]
  },
  "iso_c_binding": {
    "type": 0,
    "name": "iso_c_binding",
    "children": [
      {
        "name": "c_int",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_short",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_long",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_long_long",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_signed_char",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_size_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int8_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int16_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int32_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int64_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int128_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int_least8_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int_least16_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int_least32_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int_least64_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int_least128_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int_fast8_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int_fast16_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int_fast32_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int_fast64_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_int_fast128_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_intmax_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_intptr_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_ptrdiff_t",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_float",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_double",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_long_double",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_float128",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_float_complex",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_double_complex",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_long_double_complex",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_float128_complex",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_bool",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_char",
        "type": 3,
        "desc": "INTEGER"
      },
      {
        "name": "c_null_char",
        "type": 3,
        "desc": "CHARACTER(KIND=c_char)"
      },
      {
        "name": "c_alert",
        "type": 3,
        "desc": "CHARACTER(KIND=c_char)"
      },
      {
        "name": "c_backspace",
        "type": 3,
        "desc": "CHARACTER(KIND=c_char)"
      },
      {
        "name": "c_form_feed",
        "type": 3,
        "desc": "CHARACTER(KIND=c_char)"
      },
      {
        "name": "c_new_line",
        "type": 3,
        "desc": "CHARACTER(KIND=c_char)"
      },
      {
        "name": "c_carriage_return",
        "type": 3,
        "desc": "CHARACTER(KIND=c_char)"
      },
      {
        "name": "c_horizontal_tab",
        "type": 3,
        "desc": "CHARACTER(KIND=c_char)"
      },
      {
        "name": "c_vertical_tab",
        "type": 3,
        "desc": "CHARACTER(KIND=c_char)"
      },
      {
        "name": "c_null_ptr",
        "type": 3,
        "desc": "TYPE(c_ptr)"
      },
      {
        "name": "c_null_funptr",
        "type": 3,
        "desc": "TYPE(c_funptr)"
      },
      {
        "name": "c_ptr",
        "type": 4
      },
      {
        "name": "c_funptr",
        "type": 4
      },
      {
        "name": "c_associated",
        "type": 2,
        "return": "LOGICAL",
        "args": "c_ptr_1,c_ptr_2",
        "children": [
          {
            "name": "c_ptr_1",
            "type": 3,
            "desc": "TYPE(c_ptr)",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "c_ptr_2",
            "type": 3,
            "desc": "TYPE(c_ptr)",
            "mods": ["OPTIONAL", "INTENT(in)"]
          }
        ]
      },
      {
        "name": "c_f_pointer",
        "type": 1,
        "args": "cptr,fptr,shape",
        "children": [
          {
            "name": "cptr",
            "type": 3,
            "desc": "INTENT(in)",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "fptr",
            "type": 3,
            "desc": "ANY",
            "mods": ["POINTER", "INTENT(out)"]
          },
          {
            "name": "shape",
            "type": 3,
            "desc": "INTEGER",
            "mods": ["DIMENSION(:)", "INTENT(in)"]
          }
        ]
      },
      {
        "name": "c_f_procpointer",
        "type": 1,
        "args": "cptr,fptr",
        "children": [
          {
            "name": "cptr",
            "type": 3,
            "desc": "TYPE(c_funptr)",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "fptr",
            "type": 3,
            "desc": "PROCEDURE",
            "mods": ["POINTER", "INTENT(out)"]
          }
        ]
      },
      {
        "name": "c_funloc",
        "type": 2,
        "return": "TYPE(c_funptr)",
        "args": "x",
        "children": [
          {
            "name": "x",
            "type": 3,
            "desc": "PROCEDURE",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "c_loc",
        "type": 2,
        "return": "TYPE(c_ptr)",
        "args": "x",
        "children": [
          {
            "name": "x",
            "type": 3,
            "desc": "ANY",
            "mods": ["POINTER", "INTENT(in)"]
          }
        ]
      },
      {
        "name": "c_sizeof",
        "type": 2,
        "return": "INTEGER(KIND=c_size_t)",
        "args": "x",
        "children": [
          {
            "name": "x",
            "type": 3,
            "desc": "ANY",
            "mods": ["INTENT(in)"]
          }
        ]
      }
    ]
  },
  "ieee_exceptions": {
    "type": 0,
    "name": "ieee_exceptions",
    "children": [
      {
        "name": "ieee_flag_type",
        "type": 4
      },
      {
        "name": "ieee_overflow",
        "type": 3,
        "desc": "TYPE(ieee_flag_type)"
      },
      {
        "name": "ieee_divide_by_zero",
        "type": 3,
        "desc": "TYPE(ieee_flag_type)"
      },
      {
        "name": "ieee_invalid",
        "type": 3,
        "desc": "TYPE(ieee_flag_type)"
      },
      {
        "name": "ieee_underflow",
        "type": 3,
        "desc": "TYPE(ieee_flag_type)"
      },
      {
        "name": "ieee_inexact",
        "type": 3,
        "desc": "TYPE(ieee_flag_type)"
      },
      {
        "name": "ieee_usual",
        "type": 3,
        "desc": "TYPE(ieee_flag_type)",
        "mods": ["DIMENSION(3)"]
      },
      {
        "name": "ieee_all",
        "type": 3,
        "desc": "TYPE(ieee_flag_type)",
        "mods": ["DIMENSION(5)"]
      }
    ]
  },
  "ieee_arithmetic": {
    "type": 0,
    "name": "ieee_arithmetic",
    "use": "ieee_exceptions",
    "children": [
      {
        "name": "ieee_status_type",
        "type": 4
      },
      {
        "name": "ieee_class_type",
        "type": 4
      },
      {
        "name": "ieee_round_type",
        "type": 4
      },
      {
        "name": "ieee_signaling_nan",
        "type": 3,
        "desc": "TYPE(ieee_class_type)"
      },
      {
        "name": "ieee_quiet_nan",
        "type": 3,
        "desc": "TYPE(ieee_class_type)"
      },
      {
        "name": "ieee_negative_inf",
        "type": 3,
        "desc": "TYPE(ieee_class_type)"
      },
      {
        "name": "ieee_negative_normal",
        "type": 3,
        "desc": "TYPE(ieee_class_type)"
      },
      {
        "name": "ieee_negative_denormal",
        "type": 3,
        "desc": "TYPE(ieee_class_type)"
      },
      {
        "name": "ieee_negative_zero",
        "type": 3,
        "desc": "TYPE(ieee_class_type)"
      },
      {
        "name": "ieee_positive_zero",
        "type": 3,
        "desc": "TYPE(ieee_class_type)"
      },
      {
        "name": "ieee_positive_denormal",
        "type": 3,
        "desc": "TYPE(ieee_class_type)"
      },
      {
        "name": "ieee_positive_normal",
        "type": 3,
        "desc": "TYPE(ieee_class_type)"
      },
      {
        "name": "ieee_positive_inf",
        "type": 3,
        "desc": "TYPE(ieee_class_type)"
      },
      {
        "name": "ieee_nearest",
        "type": 3,
        "desc": "TYPE(ieee_round_type)"
      },
      {
        "name": "ieee_to_zero",
        "type": 3,
        "desc": "TYPE(ieee_round_type)"
      },
      {
        "name": "ieee_up",
        "type": 3,
        "desc": "TYPE(ieee_round_type)"
      },
      {
        "name": "ieee_down",
        "type": 3,
        "desc": "TYPE(ieee_round_type)"
      },
      {
        "name": "ieee_other",
        "type": 3,
        "desc": "TYPE(ieee_round_type)"
      },
      {
        "name": "ieee_class",
        "type": 2,
        "return": "TYPE(ieee_class_type)",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_copy_sign",
        "type": 1,
        "args": "X,Y",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(inout)"]
          },
          {
            "name": "Y",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_get_flag",
        "type": 1,
        "args": "FLAG,FLAG_VALUE",
        "children": [
          {
            "name": "FLAG",
            "type": 3,
            "desc": "TYPE(ieee_flag_type)",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "FLAG_VALUE",
            "type": 3,
            "desc": "LOGICAL",
            "mods": ["INTENT(out)"]
          }
        ]
      },
      {
        "name": "ieee_set_flag",
        "type": 1,
        "args": "FLAG,FLAG_VALUE",
        "children": [
          {
            "name": "FLAG",
            "type": 3,
            "desc": "TYPE(ieee_flag_type)",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "FLAG_VALUE",
            "type": 3,
            "desc": "LOGICAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_get_halting_mode",
        "type": 1,
        "args": "FLAG,HALTING",
        "children": [
          {
            "name": "FLAG",
            "type": 3,
            "desc": "TYPE(ieee_flag_type)",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "HALTING",
            "type": 3,
            "desc": "LOGICAL",
            "mods": ["INTENT(out)"]
          }
        ]
      },
      {
        "name": "ieee_set_halting_mode",
        "type": 1,
        "args": "FLAG,HALTING",
        "children": [
          {
            "name": "FLAG",
            "type": 3,
            "desc": "TYPE(ieee_flag_type)",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "HALTING",
            "type": 3,
            "desc": "LOGICAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_get_rounding_mode",
        "type": 1,
        "args": "ROUND_VALUE",
        "children": [
          {
            "name": "ROUND_VALUE",
            "type": 3,
            "desc": "TYPE(ieee_round_type)",
            "mods": ["INTENT(out)"]
          }
        ]
      },
      {
        "name": "ieee_set_rounding_mode",
        "type": 1,
        "args": "ROUND_VALUE",
        "children": [
          {
            "name": "ROUND_VALUE",
            "type": 3,
            "desc": "TYPE(ieee_round_type)",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_get_status",
        "type": 1,
        "args": "STATUS_VALUE",
        "children": [
          {
            "name": "STATUS_VALUE",
            "type": 3,
            "desc": "TYPE(ieee_status_type)",
            "mods": ["INTENT(out)"]
          }
        ]
      },
      {
        "name": "ieee_set_status",
        "type": 1,
        "args": "STATUS_VALUE",
        "children": [
          {
            "name": "STATUS_VALUE",
            "type": 3,
            "desc": "TYPE(ieee_status_type)",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_is_finite",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_is_nan",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_is_negative",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_is_normal",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_logb",
        "type": 2,
        "return": "REAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_next_after",
        "type": 2,
        "return": "REAL",
        "args": "X,Y",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "Y",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_rem",
        "type": 2,
        "return": "REAL",
        "args": "X,Y",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "Y",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_rint",
        "type": 2,
        "return": "REAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_scalb",
        "type": 2,
        "return": "REAL",
        "args": "X,I",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "I",
            "type": 3,
            "desc": "INTEGER",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_selected_real_kind",
        "type": 2,
        "return": "INTEGER",
        "args": "P,R",
        "children": [
          {
            "name": "P",
            "type": 3,
            "desc": "INTEGER",
            "mods": ["OPTIONAL", "INTENT(in)"]
          },
          {
            "name": "R",
            "type": 3,
            "desc": "INTEGER",
            "mods": ["OPTIONAL", "INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_datatype",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["OPTIONAL", "INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_denormal",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["OPTIONAL", "INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_divide",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["OPTIONAL", "INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_flag",
        "type": 2,
        "return": "LOGICAL",
        "args": "FLAG,X",
        "children": [
          {
            "name": "FLAG",
            "type": 3,
            "desc": "TYPE(ieee_flag_type)",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["OPTIONAL", "INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_halting",
        "type": 2,
        "return": "LOGICAL",
        "args": "FLAG",
        "children": [
          {
            "name": "FLAG",
            "type": 3,
            "desc": "TYPE(ieee_flag_type)",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_inf",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["OPTIONAL", "INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_io",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["OPTIONAL", "INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_nan",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["OPTIONAL", "INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_rounding",
        "type": 2,
        "return": "LOGICAL",
        "args": "ROUND_VALUE,X",
        "children": [
          {
            "name": "FLAG",
            "type": 3,
            "desc": "TYPE(ieee_round_type)",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["OPTIONAL", "INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_sqrt",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["OPTIONAL", "INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_support_standard",
        "type": 2,
        "return": "LOGICAL",
        "args": "X",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["OPTIONAL", "INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_unordered",
        "type": 2,
        "return": "LOGICAL",
        "args": "X,Y",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "Y",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          }
        ]
      },
      {
        "name": "ieee_value",
        "type": 2,
        "return": "REAL",
        "args": "X,CLASS",
        "children": [
          {
            "name": "X",
            "type": 3,
            "desc": "REAL",
            "mods": ["INTENT(in)"]
          },
          {
            "name": "CLASS",
            "type": 3,
            "desc": "TYPE(ieee_class_type)",
            "mods": ["INTENT(in)"]
          }
        ]
      }
    ]
  },
  "ieee_features": {
    "type": 0,
    "name": "ieee_features",
    "children": [
      {
        "name": "ieee_features_type",
        "type": 4
      },
      {
        "name": "ieee_denormal",
        "type": 3,
        "desc": "TYPE(ieee_features_type)"
      },
      {
        "name": "ieee_divide",
        "type": 3,
        "desc": "TYPE(ieee_features_type)"
      },
      {
        "name": "ieee_halting",
        "type": 3,
        "desc": "TYPE(ieee_features_type)"
      },
      {
        "name": "ieee_inexact_flag",
        "type": 3,
        "desc": "TYPE(ieee_features_type)"
      },
      {
        "name": "ieee_inf",
        "type": 3,
        "desc": "TYPE(ieee_features_type)"
      },
      {
        "name": "ieee_invalid_flag",
        "type": 3,
        "desc": "TYPE(ieee_features_type)"
      },
      {
        "name": "ieee_nan",
        "type": 3,
        "desc": "TYPE(ieee_features_type)"
      },
      {
        "name": "ieee_rounding",
        "type": 3,
        "desc": "TYPE(ieee_features_type)"
      },
      {
        "name": "ieee_sqrt",
        "type": 3,
        "desc": "TYPE(ieee_features_type)"
      },
      {
        "name": "ieee_underflow_flag",
        "type": 3,
        "desc": "TYPE(ieee_features_type)"
      }
    ]
  }
}
